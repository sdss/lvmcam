# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on: push

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]

    steps:

    - uses: actions/checkout@v2

    - name: Cache Setup
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies (apt-get)
      run: |
        sudo apt install libgirepository1.0-dev make build-essential
        sudo apt install libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget llvm libncurses5-dev
        sudo apt install libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl
        sudo apt install libcairo2-dev libjpeg-dev libgif-dev debhelper cmake gtk-doc-tools
        sudo apt install libusb-1.0-0-dev libaudit-dev libgirepository1.0-dev libglib2.0-dev
        sudo apt install libnotify-dev libgtk-3-dev libgstreamer-plugins-base1.0-dev meson
        sudo apt install python3-pip python3-dev intltool libxml2-dev
    
    - name: Install Aravis 0.8.
      run: |
        wget http://ftp.br.debian.org/debian/pool/main/a/aravis/aravis_0.8.6.orig.tar.xz
        wget http://ftp.br.debian.org/debian/pool/main/a/aravis/aravis_0.8.6-1.dsc
        wget http://ftp.br.debian.org/debian/pool/main/a/aravis/aravis_0.8.6-1.debian.tar.xz
        tar xvJf aravis_0.8.6.orig.tar.xz
        cd aravis-0.8.6
        tar xvJf ../aravis_0.8.6-1.debian.tar.xz
        dpkg-buildpackage -rfakeroot -b -uc -us
        cd ..
        sudo dpkg -i *.deb
        sudo apt-get update
        sudo apt-get upgrade
        sudo apt-get install gir1.2-aravis-0.8 aravis-tools aravis-tools-cli

    - name: Install dependencies (poetry)
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    # - name: Setup node.js (for pyright)
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: '12'

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --show-source --statistics

    - name: Lint with black
      run: |
        poetry run black --check .

    - name: Lint with isort
      run: |
        poetry run isort -c .
    
    # - name: Run type checking
    #   continue-on-error: true
    #   run: |
    #     npm install -g pyright
    #     poetry run pyright

    - name: Test with pytest
      run: |
        poetry run pytest

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

