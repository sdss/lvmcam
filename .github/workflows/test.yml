# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on: push

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:

    - uses: actions/checkout@v2

    - name: Cache Setup
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install libgirepository1.0-dev
      run: sudo apt install libgirepository1.0-dev
  
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .

    - name: Setup node.js (for pyright)
      uses: actions/setup-node@v2
      with:
        node-version: '12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --show-source --statistics
    - name: Lint with black
      run: |
        poetry run black --check .
    - name: Lint with isort
      run: |
        poetry run isort -c archon
    - name: Run type checking
      continue-on-error: true
      run: |
        npm install -g pyright
        poetry run pyright
    - name: Test with pytest
      run: |
        poetry run pytest

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

